version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow

  airflow-webserver:
    image: apache/airflow:2.8.0
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'cNyFbp4392Yz3aG_H10ZPDyK9darw_0dvzE2SzGy2qA='
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'True'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
      - ./snowflake_config.json:/opt/airflow/snowflake_config.json
    ports:
      - "8081:8080"
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow webserver
      "

  airflow-scheduler:
    image: apache/airflow:2.8.0
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'cNyFbp4392Yz3aG_H10ZPDyK9darw_0dvzE2SzGy2qA='
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
      - ./snowflake_config.json:/opt/airflow/snowflake_config.json
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow scheduler
      "
